//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 13.12.2018 16:17:54
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Reflection;
using System.Linq.Expressions;
using System.Data.Entity.Core;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata


#endregion

namespace FttmModel
{

    #region FttmEntities

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FttmEntities : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new FttmEntities object.
        /// </summary>
        public FttmEntities() : 
                base(@"name=FttmEntitiesConnectionString", "FttmEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new FttmEntities object using the connection string found in the 'FttmEntities' section of the application configuration file.
        /// </summary>
        public FttmEntities(string connectionString) : 
                base(connectionString, "FttmEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new FttmEntities object.
        /// </summary>
        public FttmEntities(EntityConnection connection) : base(connection, "FttmEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vdp03> Vdp03s
        {
            get
            {
                if ((_Vdp03s == null))
                {
                    _Vdp03s = base.CreateObjectSet<Vdp03>("Vdp03s");
                }
                return _Vdp03s;
            }
        }
        private ObjectSet<Vdp03> _Vdp03s;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the Vdp03s EntitySet.
        /// </summary>
        public void AddToVdp03s(Vdp03 vdp03)
        {
            base.AddObject("Vdp03s", vdp03);
        }

        #endregion
    }

    #endregion
}

namespace FttmModel
{

    /// <summary>
    /// There are no comments for FttmModel.Vdp03 in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="FttmModel", Name="Vdp03")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vdp03 : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Vdp03 object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        public static Vdp03 CreateVdp03(int id)
        {
            Vdp03 vdp03 = new Vdp03();
            vdp03.Id = id;
            return vdp03;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Dateandtime in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.Nullable<System.DateTime> Dateandtime
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _Dateandtime;
                OnGetDateandtime(ref value);
                return value;
            }
            set
            {
                if (_Dateandtime != value)
                {
                  OnDateandtimeChanging(ref value);
                  ReportPropertyChanging("Dateandtime");
                  _Dateandtime = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Dateandtime");
                  OnDateandtimeChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _Dateandtime;
        partial void OnGetDateandtime(ref global::System.Nullable<System.DateTime> value);
        partial void OnDateandtimeChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnDateandtimeChanged();
    
        /// <summary>
        /// There are no comments for Mks in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.Nullable<int> Mks
        {
            get
            {
                global::System.Nullable<int> value = _Mks;
                OnGetMks(ref value);
                return value;
            }
            set
            {
                if (_Mks != value)
                {
                  OnMksChanging(ref value);
                  ReportPropertyChanging("Mks");
                  _Mks = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Mks");
                  OnMksChanged();
              }
            }
        }
        private global::System.Nullable<int> _Mks;
        partial void OnGetMks(ref global::System.Nullable<int> value);
        partial void OnMksChanging(ref global::System.Nullable<int> value);
        partial void OnMksChanged();
    
        /// <summary>
        /// There are no comments for Tagname in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual string Tagname
        {
            get
            {
                string value = _Tagname;
                OnGetTagname(ref value);
                return value;
            }
            set
            {
                if (_Tagname != value)
                {
                  OnTagnameChanging(ref value);
                  ReportPropertyChanging("Tagname");
                  _Tagname = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Tagname");
                  OnTagnameChanged();
              }
            }
        }
        private string _Tagname;
        partial void OnGetTagname(ref string value);
        partial void OnTagnameChanging(ref string value);
        partial void OnTagnameChanged();
    
        /// <summary>
        /// There are no comments for Val in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public virtual global::System.Nullable<double> Val
        {
            get
            {
                global::System.Nullable<double> value = _Val;
                OnGetVal(ref value);
                return value;
            }
            set
            {
                if (_Val != value)
                {
                  OnValChanging(ref value);
                  ReportPropertyChanging("Val");
                  _Val = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Val");
                  OnValChanged();
              }
            }
        }
        private global::System.Nullable<double> _Val;
        partial void OnGetVal(ref global::System.Nullable<double> value);
        partial void OnValChanging(ref global::System.Nullable<double> value);
        partial void OnValChanged();
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();

        #endregion
    }

}
